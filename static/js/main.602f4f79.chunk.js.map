{"version":3,"sources":["constants.ts","components/Article.tsx","components/Header.tsx","components/Question.tsx","components/Markdown.tsx","data.ts","components/CTACard.tsx","components/CustomCard.tsx","components/Gallery.tsx","pages/Home.tsx","pages/Purpose.tsx","components/Navbar.tsx","components/Footer.tsx","connectx/itertools.tsx","connectx/ConnectXImpl.ts","connectx/MinimaxPlayer.ts","connectx/ConnectX.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ASSETS_URL","process","env","NODE_ENV","MARKDOWN_ASSETS_URL","NOTEBOOK_ASSETS_URL","DATASET_ASSETS_URL","useStyles","makeStyles","theme","createStyles","article","margin","padding","width","backgroundColor","Article","props","classes","Paper","elevation","className","children","Header","style","title","Typography","variant","description","wrapper","position","header","maxWidth","question","answer","toggleControl","right","top","TextOnlyQuestion","Question","useState","showAnswer","setShowAnswer","styleOverrides","FormControlLabel","control","Switch","checked","onChange","name","label","CodeComponent","collapsed","setCollapsed","IconButton","onClick","Collapse","in","DownloadButton","Button","component","color","href","target","download","GetApp","InlineMarkdownQuestion","marginTop","marginBottom","Markdown","markdownAsString","setMarkdownAsString","isVersionClean","setVersionClean","fetchMarkdown","a","url","getCleanedFileURL","getOriginalFileURL","toFetch","fetch","res","text","resText","fileName","useEffect","components","code","node","inline","match","exec","String","float","marginLeft","FileCopy","dark","language","PreTag","replace","qinline","filteredChildren","filter","c","length","console","warn","Error","display","flexDirection","justifyContent","dataset","Checkbox","skipHtml","remarkPlugins","remarkMath","rehypePlugins","rehypeRaw","rehypeKatex","textAlign","questions","map","questionAndAnswer","tutorials","img","content","notebook","card","alignItems","flexWrap","palette","background","paper","CTACard","hovering","setHovering","secondary","onMouseEnter","onMouseLeave","Link","to","linkTo","buttonText","KeyboardArrowRightOutlined","minWidth","height","objectFit","border","borderColor","splash","CustomCard","Card","CardMedia","media","image","CardContent","CardActions","flex","OpenInNew","gallery","Gallery","cards","skill","key","backgroundImage","bottom","left","opacity","zIndex","backgroundSize","overlay","Home","main","paddingTop","purposeMain","fontSize","purposeSub","Purpose","heading","bar","links","ButtonAppBar","AppBar","Toolbar","RouterLink","textDecoration","root","overflow","grid","siteTag","linkTag","paddingRight","Footer","tutorial","idx","rel","flatten","groupby","SENTINEL","Symbol","iterableOfIterables","iterable","item","f","chain","iterables","primitiveIdentity","x","iter","iterator","keyFn","it","targetKey","currentKey","grouper","tgtKey","currentValue","nextVal","next","done","value","NONE","BLACK","BLACK_PLAYER","WHITE_PLAYER","zip","rows","_","row","genBoard","columns","board","i","push","j","ConnectXImpl","cols","requiredToWin","win","gameOver","turn","moveHistory","this","column","shadow","alert","have_won","checkForWin","getWinner","w","lines","diagonalsPos","diagonalsNeg","line","group","groupArr","Array","from","log","moveRemoved","pop","undefined","turnFound","keys","col","insert","string","join","y","board_row","getBoardRepr","newGame","JSON","parse","stringify","history","args","game","move","matrix","diagonals","diagonalVals","diagRow","newArr","MinimaxPlayer","disableMove","automated","inDecision","evaluationTable","DEPTH_LIMIT","alpha","beta","depthLimit","currentPlayer","getWhoseMove","validMoves","getValidMoves","utilityScore","eval_connect4_2","bestScore","Infinity","successiveMove","moveScore","minimax","undoLastMove","Math","max","min","utility","max_rows","max_cols","sum","depth","winner","bestMoves","minimaxScore","round","floor","random","ManualPlayer","onMoveReady","GameOptions","updatePage","setGame","setPlayer","players","playerStr","player","id","resetGame","GameSettings","setCondition","maxAllowed","minAllowed","setter","document","getElementById","doGameSet","allowReset","confirm","generateSetConditionWrapper","placeholder","type","n","setupManualPlayer","ConnectX","defaultAutoDelay","connectXGame","setConnectXGame","setPlayers","update","setUpdate","d","sd","onMoveMade","whichPlayer","currPlayer","doMoveDisabled","nextMove","copy","dangerouslySetInnerHTML","__html","replaceAll","getWinningPlayer","moveMade","getManualPlayerMove","actualMove","disabled","isManual","newPlayerArr","newPlayer","trim","moveHistoryL","split","v","newConnectXGame","getGameFromHistory","createMuiTheme","primary","light","contrastText","App","ThemeProvider","Container","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.602f4f79.chunk.js","sourcesContent":["import process from \"process\";\n\nexport const IS_DEV: boolean = !process.env.NODE_ENV || process.env.NODE_ENV === \"development\";\n\nexport const ASSETS_URL = \"https://raw.githubusercontent.com/CSC480-Group1/CSC-480/main\";\n\nexport const MARKDOWN_ASSETS_URL = `${ASSETS_URL}/code/markdown`;\nexport const NOTEBOOK_ASSETS_URL = `${ASSETS_URL}/code/notebooks`;\nexport const DATASET_ASSETS_URL = `${ASSETS_URL}/datasets`;","import { Paper } from \"@material-ui/core\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    article: {\n      margin: \"25px auto\",\n      padding: \"25px\",\n      width: \"80%\",\n      backgroundColor: \"whitesmoke\"\n    }\n  })\n);\n\ninterface ArticleProps {\n  children: React.ReactNode,\n}\n\nexport default function Article(props: ArticleProps) {\n  const classes = useStyles();\n  \n  return (\n    <Paper elevation={3} className={classes.article}>\n      {props.children}\n    </Paper>\n  );\n}\n","import { Typography } from \"@material-ui/core\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({})\n);\n\ninterface HeaderProps {\n  description: string;\n  title: string;\n  \n}\n\nexport default function Header(props: HeaderProps) {\n  const classes = useStyles();\n  \n  return (\n    <>\n      <section style={{width: \"50%\", margin: \"20px auto\"}}>\n        <h1>{props.title}</h1>\n        <Typography variant=\"subtitle1\">{props.description}</Typography>\n        <hr/>\n      </section>\n    </>\n  );\n}\n","import { FormControlLabel, Paper, Switch, Typography } from \"@material-ui/core\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport React, { useState } from \"react\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    wrapper: {\n      width: \"80%\",\n      margin: \"10px auto\",\n      padding: \"20px\",\n      position: \"relative\",\n    },\n    header: {\n      maxWidth: \"80%\",\n    },\n    question: {\n      maxWidth: \"80%\",\n    },\n    answer: {\n      margin: \"10px auto\",\n      padding: \"20px\",\n      backgroundColor: \"whitesmoke\"\n    },\n    toggleControl: {\n      position: \"absolute\",\n      right: \"0\",\n      top: \"20px\",\n      maxWidth: \"20%\",\n    },\n  })\n);\n\nexport interface TextOnlyQuestionProps {\n  question: string,\n  answer: string\n}\nexport function TextOnlyQuestion(props: TextOnlyQuestionProps) {\n  return (\n    <Question\n      question={\n        <Typography variant={\"h6\"}>\n          {props.question}\n        </Typography>\n      }\n\n      answer={\n        <Typography>\n          {props.answer}\n        </Typography>\n      }\n    />\n  );\n}\n\nexport interface QuestionProps {\n  question: string | JSX.Element,\n  answer: string | JSX.Element,\n  header?: JSX.Element,\n  styleOverrides?: Partial<React.CSSProperties>,\n}\n\nexport default function Question(props: QuestionProps) {\n  const classes = useStyles();\n  const [showAnswer, setShowAnswer] = useState(false);\n  \n  return (\n    <Paper style={props.styleOverrides} className={classes.wrapper} variant={\"outlined\"}>\n      <div className={classes.header}>\n        {props.header}\n      </div>\n      <FormControlLabel\n        className={classes.toggleControl}\n        control={\n          <Switch\n            checked={showAnswer}\n            onChange={() => setShowAnswer(!showAnswer)}\n            name=\"showAnswer\"/>}\n        label=\"Show Answer\"\n      />\n      <div className={classes.question}>\n        {props.question}\n      </div>\n      {showAnswer &&\n      <Paper className={classes.answer} variant={\"outlined\"}>\n        {props.answer}\n      </Paper>}\n    </Paper>\n  );\n}\n","import {\n  Button,\n  Checkbox,\n  FormControlLabel,\n  IconButton,\n  Typography\n} from \"@material-ui/core\";\nimport { FileCopy, GetApp } from \"@material-ui/icons\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\nimport \"katex/dist/katex.min.css\";\nimport React, { useEffect, useState } from \"react\";\nimport { Collapse } from \"react-bootstrap\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport ReactMarkdown from \"react-markdown\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport dark from \"react-syntax-highlighter/dist/esm/styles/prism/material-dark\";\n// @ts-ignore\nimport rehypeKatex from \"rehype-katex\";\n// @ts-ignore\nimport rehypeRaw from \"rehype-raw\";\n// @ts-ignore\nimport remarkMath from \"remark-math\";\nimport {\n  DATASET_ASSETS_URL,\n  MARKDOWN_ASSETS_URL,\n  NOTEBOOK_ASSETS_URL\n} from \"../constants\";\nimport Article from \"./Article\";\nimport Header from \"./Header\";\nimport \"./Markdown.scss\";\nimport Question, { TextOnlyQuestion, TextOnlyQuestionProps } from \"./Question\";\n// import TEST_README from \"../markdown/minimax_algorithm_cleaned.md\";\n\nfunction CodeComponent(props: any) {\n  const [collapsed, setCollapsed] = useState(true);\n  \n  const changeCollapsed = () => {\n    setCollapsed(!collapsed);\n  };\n  \n  return (\n    <div className=\"collapsable\">\n      <IconButton\n        className=\"collapse-btn\"\n        onClick={changeCollapsed}>\n        {!collapsed ?\n          <AddIcon/> :\n          <RemoveIcon/>\n        }\n      </IconButton>\n      \n      {!collapsed && <code className=\"hidden-text\">Hidden</code>}\n      \n      <Collapse in={collapsed}>\n        <div className=\"collapse-custom\">\n          <code\n            className={props.className}\n            children={props.children} {...props} />\n        </div>\n      </Collapse>\n    </div>\n  );\n}\n\nfunction DownloadButton(props: { href: string; children: React.ReactNode; }) {\n  return (\n    <Button\n      component=\"a\"\n      color=\"primary\"\n      variant=\"contained\"\n      href={props.href}\n      style={{margin: 10}}\n      target={\"_blank\"}\n      download\n    >\n      <GetApp/>\n      {props.children}\n    </Button>\n  );\n}\n\nexport interface InlineMarkdownQuestionProps {\n  question: JSX.Element,\n  answer: JSX.Element,\n}\n\n// @ts-ignore\nconst InlineMarkdownQuestion = (props: InlineMarkdownQuestionProps) => {\n  return (\n    <Question\n      question={props.question}\n      answer={props.answer}\n      header={(\n        <h3 className=\"mt-0\"><u>Activity: Check Your Knowledge!</u></h3>\n      )}\n      styleOverrides={{\n        width: \"100%\",\n        marginTop: \"5vh\",\n        marginBottom: \"5vh\",\n      }}\n    />\n  );\n};\n\nexport default function Markdown(props:\n  {\n    title: string,\n    description: string,\n    fileName: string;\n    dataset?: string;\n    questions: TextOnlyQuestionProps[]\n  }) {\n  const [markdownAsString, setMarkdownAsString] = useState(\"\");\n  const [isVersionClean, setVersionClean] = useState(true);\n  \n  const fetchMarkdown = async () => {\n    const url = isVersionClean ? getCleanedFileURL() : getOriginalFileURL();\n    // Switch when testing locally\n    // const toFetch = TEST_README;\n    const toFetch = url;\n    const res = await fetch(toFetch);\n    const resText = await res.text();\n    setMarkdownAsString(resText);\n  };\n  \n  const getPythonNotebookFileUrl = () => {\n    return `${NOTEBOOK_ASSETS_URL}/${props.fileName}.ipynb`;\n  };\n  \n  const getCleanedFileURL = () => {\n    return `${MARKDOWN_ASSETS_URL}/${props.fileName}_cleaned.md`;\n  };\n  \n  const getOriginalFileURL = () => {\n    return `${MARKDOWN_ASSETS_URL}/${props.fileName}_original.md`;\n  };\n  \n  useEffect(() => {\n    fetchMarkdown();\n  }, [isVersionClean, props.fileName]);\n  \n  const components: any = {\n    // @ts-ignore\n    code({node, inline, className, children, ...props}) {\n      const match = /language-(\\w+)/.exec(className || \"\");\n\n      if (!inline && match) {\n        return (\n          <span>\n            <CopyToClipboard text={String(children)}>\n              <IconButton\n                color=\"primary\"\n                component=\"span\"\n                style={{float: \"right\", marginLeft: 10}}>\n                <FileCopy/>\n              </IconButton>\n            </CopyToClipboard>\n            <SyntaxHighlighter\n              style={dark} language={match[1]} PreTag=\"div\"\n              children={\n                String(children)\n                  .replace(/\\n$/, \"\")\n              }\n              {...props} />\n          </span>\n        );\n      }\n      else if (!inline && !match) {\n        return (\n          <CodeComponent className={className} children={children} {...props} />\n        );\n      }\n      \n      return (\n        <code\n          className={className}\n          children={children} {...props} />\n      );\n    },\n\n    // @ts-ignore\n    qinline({children}) {\n      const filteredChildren = children.filter((c: any) => {\n        return typeof(c) !== \"string\";\n      });\n\n      if (filteredChildren.length !== 2) {\n        console.warn(children);\n        throw new Error(\"Wrong number of children for qinline!\");\n      }\n\n      return (\n        <InlineMarkdownQuestion question={filteredChildren[0]} answer={filteredChildren[1]} />\n      );\n    },\n\n    // @ts-ignore\n    question({className, children, ...props}) {\n      return (\n        <div className={`${className} mr-1`} {...props}>\n          {children}\n        </div>\n      );\n    },\n\n    // @ts-ignore\n    answer({className, children, ...props}) {\n      return (\n        <p className={`${className}`} {...props}>\n          {children}\n        </p>\n      );\n    }\n  };\n\n  return (\n    <>\n      <Header description={props.description} title={props.title}/>\n      <Article>\n        <div style={{\n          margin: 10,\n          padding: 10,\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"center\"\n        }}>\n          <DownloadButton href={getPythonNotebookFileUrl()}>\n            Download Python Notebook\n          </DownloadButton>\n          \n          {props.dataset &&\n          <DownloadButton href={`${DATASET_ASSETS_URL}/${props.dataset}`}>\n            Download Dataset\n          </DownloadButton>\n          }\n        </div>\n        <FormControlLabel\n          control={<Checkbox\n            checked={!isVersionClean}\n            onChange={() => setVersionClean(!isVersionClean)} name=\"checkedA\"/>}\n          label=\"Show all code\"\n        />\n        <article className=\"markdown-body\" style={{margin: 0, padding: 0}}>\n          <ReactMarkdown\n            components={components}\n            skipHtml={false}\n            remarkPlugins={[remarkMath]}\n            rehypePlugins={[rehypeRaw, rehypeKatex]}>{markdownAsString}</ReactMarkdown>\n        </article>\n      </Article>\n      <Typography variant={\"h4\"} style={{textAlign: \"center\"}}>\n        Test your understanding\n      </Typography>\n      {props.questions.map((questionAndAnswer) =>\n        <TextOnlyQuestion {...questionAndAnswer}/>)\n      }\n    </>\n  );\n}","export const tutorials = [\n  /* Minimax basic */\n  {\n    img: {\n      url: \"https://i.ytimg.com/vi/KU9Ch59-4vw/maxresdefault.jpg\",\n      title: \"Minimax Algorithm Image\"\n    },\n    content: {\n      title: \"Minimax with Connect X\",\n      description:\n        \"We will implement the minimax algorithm from scratch and test it on Connect X (modification of Connect 4).\",\n      dataset: \"\",\n      questions: [\n        {\n          question: \"Why do you think we only used a 3x3 or 3x4 board?\",\n          answer: \"A couple reasons. For one, it's easier to conceptualize. The bigger reason though is because minimax is not efficient on its own. It will check every possible combination each move, which is a lot, even for a 3x4 board at first.\"\n        }\n      ]\n    },\n    notebook: \"minimax_algorithm\"\n  },\n  // MCTS\n  {\n    img: {\n      url: \"https://miro.medium.com/max/1000/1*OpJz2LcElVB_XPEYAvK87Q.jpeg\",\n      title: \"MCTS Algorithm Image\"\n    },\n    content: {\n      title: \"Monte Carlo Tree Search with Connect X\",\n      description:\n        \"We will implement the Monte Carlo Tree Search (MCTS) algorithm from scratch and test it on Connect X (modification of Connect 4).\",\n      dataset: \"\",\n      questions: [\n        {\n          question: \"What's the tradeoff of using a high number of iterations? Why not make it a very large number?\",\n          answer: \"The higher the number of iterations, the paths that MCTS will create, which takes more time. We need to have a happy medium of time it takes to complete the guess for the best move and how good that guess is.\"\n        }\n      ]\n    },\n    notebook: \"mcts_tutorial\"\n  },\n];\n","import { Button, Paper } from \"@material-ui/core\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { KeyboardArrowRightOutlined } from \"@material-ui/icons\";\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    card: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      flexWrap: \"wrap\",\n      margin: \"25px auto\",\n      width: \"80%\",\n      padding: \"12px 20px\",\n      backgroundColor: theme.palette.background.paper\n    }\n  })\n);\n\ninterface CTAProps {\n  title: string,\n  description: string,\n  buttonText: string,\n  linkTo: string,\n  secondary? : boolean\n}\n\nexport default function CTACard(props: CTAProps) {\n  const [hovering, setHovering] = useState(false);\n  const classes = useStyles();\n  \n  return (\n    <Paper\n      className={classes.card}\n      elevation={hovering ? 24 : 6}\n      variant={props.secondary ? \"outlined\" : \"elevation\"}\n      onMouseEnter={() => setHovering(true)}\n      onMouseLeave={() => setHovering(false)}>\n      <div>\n        <h2>{props.title}</h2>\n        <p>{props.description}</p>\n      </div>\n      <Button\n        component={Link}\n        color=\"primary\"\n        variant=\"contained\"\n        to={props.linkTo}\n      >\n        {props.buttonText}\n        <KeyboardArrowRightOutlined/>\n      </Button>\n    </Paper>\n  );\n}\n","import {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia\n} from \"@material-ui/core\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { KeyboardArrowRightOutlined, OpenInNew } from \"@material-ui/icons\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    card: {\n      width: \"30%\",\n      minWidth: \"500px\",\n      margin: \"15px\",\n      display: \"flex\",\n      flexDirection: \"column\"\n    },\n    \"media\": {\n      height: \"240px\",\n      width: \"100%\",\n      display: \"block\",\n      objectFit: \"cover\",\n      border: \"3px solid\",\n      borderColor: \"#4a4848\"\n    },\n    splash: {\n      display: \"block\",\n      margin: \"40px auto\"\n    }\n  })\n);\n\nexport interface CardProps {\n  img: {\n    url: string,\n    title: string,\n  },\n  content: {\n    title: string,\n    description: string\n  },\n  linkTo?: string,\n  notebook?: string\n}\n\nexport default function CustomCard(props: CardProps) {\n  const classes = useStyles();\n  \n  return (\n    <Card className={classes.card}>\n      <CardMedia\n        className={classes.media}\n        image={props.img.url}\n        title={props.img.title}\n      />\n      <CardContent>\n        <h3>{props.content.title}</h3>\n        <p>{props.content.description}</p>\n      </CardContent>\n      <CardActions style={{\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n        alignItems: \"flex-end\",\n        flex: \"1 1 auto\",\n      }}>\n        {/*If external link...*/}\n        {props.linkTo &&\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          href={props.linkTo}\n          style={{margin: 10}}\n          target=\"_blank\">\n          View Tutorial\n          <OpenInNew/>\n        </Button>}\n        {/*If link to notebook...*/}\n        {props.notebook && <Button\n          component={Link}\n          color=\"primary\"\n          variant=\"contained\"\n          to={`/${props.notebook}`}\n          style={{margin: 10}}>\n          View Tutorial\n          <KeyboardArrowRightOutlined/>\n        </Button>}\n      \n      </CardActions>\n    </Card>\n  );\n}\n","import { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport CustomCard, { CardProps } from \"./CustomCard\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    gallery: {\n      display: \"flex\",\n      justifyContent: \"space-around\",\n      flexWrap: \"wrap\"\n    }\n  })\n);\n\ninterface GalleryProps {\n  cards: CardProps[]\n}\n\nexport default function Gallery(props: GalleryProps) {\n  const classes = useStyles();\n  \n  return (\n    <div className={classes.gallery}>\n      {props.cards.map((skill =>\n        <CustomCard\n          {...skill}\n          key={skill.content.title}/>\n      ))}\n    </div>\n  );\n}\n","import { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport React from \"react\";\n\nimport CTACard from \"../components/CTACard\";\nimport Gallery from \"../components/Gallery\";\nimport { tutorials } from \"../data\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    card: {\n      width: \"30%\",\n      minWidth: \"300px\",\n      margin: \"10px 8px\"\n    },\n    media: {\n      height: \"240px\"\n    },\n    splash: {\n      display: \"block\",\n      margin: \"40px auto\",\n      width: \"80%\",\n      backgroundColor: \"#cccccc\"\n    },\n    backgroundImage: {\n      position: \"fixed\",\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      opacity: 0.25,\n      zIndex: -100,\n      height: \"100%\",\n      background: \"url(https://www.pngkit.com/png/detail/194-1940853_play-connect-4-with-iphone-ipad-using-imessage.png) no-repeat center center fixed\",\n      backgroundSize: \"cover\"\n    },\n    overlay: {\n      position: \"fixed\",\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      opacity: 0.35,\n      zIndex: -100,\n      height: \"100%\",\n      backgroundColor: \"#000000\",\n      backgroundSize: \"cover\"\n    }\n  })\n);\n\nexport default function Home() {\n  const classes = useStyles();\n  \n  return (\n    <>\n      <div className={classes.backgroundImage}/>\n      <div className={classes.overlay}/>\n      <section>\n        <h1>CSC 480 Project</h1>\n        <p>Some game heuristics</p>\n      </section>\n      <CTACard\n        title=\"Not sure where to start?\"\n        description=\"Learn how to use the website\"\n        buttonText=\"Purpose\"\n        linkTo=\"/purpose\"/>\n\n      <Gallery cards={tutorials}/>\n    </>\n  );\n}\n","import { Paper } from \"@material-ui/core\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\n\nimport CTACard from \"../components/CTACard\";\nimport Gallery from \"../components/Gallery\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    media: {\n      height: \"240px\",\n    },\n    splash: {\n      display: \"block\",\n      margin: \"40px auto\",\n      width: \"80%\",\n      backgroundColor: \"#cccccc\",\n    },\n    backgroundImage: {\n      position: \"fixed\",\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      opacity: 0.25,\n      zIndex: -100,\n      height: \"100%\",\n      background:\n        \"url(https://www.pngkit.com/png/detail/194-1940853_play-connect-4-with-iphone-ipad-using-imessage.png) no-repeat center center fixed\",\n      backgroundSize: \"cover\",\n    },\n    overlay: {\n      position: \"fixed\",\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      opacity: 0.35,\n      zIndex: -100,\n      height: \"100%\",\n      backgroundColor: \"#000000\",\n      backgroundSize: \"cover\",\n    },\n    main: {\n      textAlign: \"center\",\n      paddingTop: \"0vh\",\n    },\n    purposeMain: {\n      fontSize: \"1.5em\",\n    },\n    purposeSub: {\n      fontSize: \"1.5em\",\n    },\n    paper: {\n      padding: \"1vh 5px\",\n    },\n  })\n);\n\nexport default function Purpose() {\n  const classes = useStyles();\n\n  return (\n    <main className={classes.main}>\n      <div className={classes.backgroundImage} />\n      <div className={classes.overlay} />\n      <h1>Our Purpose</h1>\n      <section className={classes.purposeMain}>\n        <Paper className={classes.paper}>\n          This website provides some tutorials of general algorithms and uses of\n          them we have learned from CSC 480 and/or our group project.\n        </Paper>\n      </section>\n      <section className={classes.purposeSub}>\n        <Paper className={classes.paper}>\n          Find more info about the project in our{\" \"}\n          <a href=\"https://github.com/CSC480-Group1/CSC-480/blob/main/README.md\">\n            README\n          </a>\n          . Check out the footer for team information and other links!\n        </Paper>\n      </section>\n      <section style={{ marginBottom: \"3vh\" }} className={classes.purposeSub}>\n        <Paper className={classes.paper}>\n          Please visit our GitHub repo linked below in the footer to view all\n          source code used in this project. More advanced usage of some of the\n          algorithms described in our tutorials can be found in the files in{\" \"}\n          <a href=\"https://github.com/CSC480-Group1/CSC-480/tree/main/code/games\">\n            this directory\n          </a>\n          .\n        </Paper>\n      </section>\n    </main>\n  );\n}\n","import { AppBar, Link, Toolbar } from \"@material-ui/core\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport { SafeAnchor } from \"react-bootstrap\";\nimport {Link as RouterLink} from \"react-router-dom\";\nimport { ConnectX } from \"../connectx/ConnectX\";\n\n// TODO: collapse links into hamburger menu on small screen\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    heading: {\n      color: \"white\"\n    },\n    bar: {\n      justifyContent: \"space-between\"\n    },\n    links: {\n      color: \"white\",\n      padding: \"0 12px\"\n    }\n  })\n);\n\nexport default function ButtonAppBar() {\n  const classes = useStyles();\n  \n  return (\n    <AppBar position=\"static\">\n      <Toolbar className={classes.bar}>\n        <Link to=\"/\" component={RouterLink}>\n          <h3 className={classes.heading}>\n            Search Algorithms in Games\n          </h3>\n        </Link>\n        <span>\n          <Link className={classes.links} to=\"/\" component={RouterLink}>\n            Home\n          </Link>\n          <a style={{ textDecoration: \"none\" }} className={classes.links} href=\"https://colab.research.google.com/drive/1jpOXGfceP3olYiqQk5LOXA_2q2k3LzQ5?usp=sharing\">\n            Colab Notebook Demo\n          </a>\n          <Link className={classes.links} to=\"/connectx-demo\" component={RouterLink}>\n            Connect X\n          </Link>\n        </span>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","import { AppBar, Typography } from \"@material-ui/core\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\nimport { tutorials } from \"../data\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      overflow: \"hidden\",\n      padding: \"40px 0\"\n    },\n    grid: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      justifyContent: \"space-between\",\n      width: \"80%\",\n      margin: \"0 auto\",\n      \"& h3 a\": {\n        color: \"white\"\n      },\n      \"& a\": {\n        display: \"block\",\n        margin: \"16px 0\",\n        color: \"#ddd\"\n      },\n      \"& div\": {\n        display: \"inline-block\"\n      }\n    },\n    siteTag: {\n      width: \"40%\",\n      minWidth: \"300px\",\n      marginBottom: \"30px\"\n    },\n    linkTag: {\n      width: \"16.6%\",\n      minWidth: \"200px\",\n      paddingRight: \"3px\"\n    }\n  })\n);\n\nexport default function Footer() {\n  const classes = useStyles();\n  \n  return (\n    <AppBar position=\"static\" component=\"footer\" className={classes.root}>\n      <div className={classes.grid}>\n        <div className={classes.siteTag}>\n          <h2>Search Algorithms in Games</h2>\n          <p>CSC 480 | Dr. Canaan | Fall 2021 | Cal Poly</p>\n          <Typography variant=\"subtitle2\">\n            Ben Glossner  |  Jordan Powers <br/> Mukhammadorif Sultanov  |  Nicholas Sheffler\n          </Typography>\n        </div>\n        <div className={classes.linkTag}>\n          <h3>Introduction</h3>\n          <Link to='/purpose'>Purpose</Link>\n        </div>\n        \n        <div className={classes.linkTag}>\n          <h3>Tutorials</h3>\n          {tutorials.map((tutorial, idx) =>\n            <Link key={`footer-link-${idx}`} to={`/${tutorial.notebook}`}>{tutorial.content.title}</Link>\n          )}\n        </div>\n        \n        <div className={classes.linkTag}>\n          <h3>Resources</h3>\n          <a\n            href=\"https://github.com/CSC480-Group1/CSC-480\"\n            target=\"_blank\"\n            rel=\"noreferrer noopener\"\n          >\n            GitHub\n          </a>\n          <a\n            href=\"https://github.com/CSC480-Group1/CSC-480/tree/main/code/notebooks\"\n            target=\"_blank\"\n            rel=\"noreferrer noopener\"\n          >\n            Notebooks\n          </a>\n        </div>\n      </div>\n    </AppBar>\n  );\n}\n","/**\n * IMPORTANT\n *\n * These functions have been taken from https://github.com/nvie/itertools.js\n */\n\nconst SENTINEL = Symbol();\ntype Primitive = string | number | boolean;\n\nexport function* flatten<T>(\n  iterableOfIterables: Iterable<Iterable<T>>\n): Iterable<T> {\n  for (const iterable of iterableOfIterables) {\n    for (const item of iterable) {\n      yield item;\n    }\n  }\n}\n\nexport function chain<T>(...iterables: Array<Iterable<T>>): Iterable<T> {\n  return flatten(iterables);\n}\n\nfunction primitiveIdentity(x: any): Primitive {\n  /* istanbul ignore if */\n  if (\n    typeof x !== \"string\" &&\n    typeof x !== \"number\" &&\n    typeof x !== \"boolean\"\n  ) {\n    throw new Error(\n      \"Please provide a key function that can establish object identity\"\n    );\n  }\n  return x;\n}\n\nfunction iter<T>(iterable: Iterable<T>): Iterator<T> {\n  return iterable[Symbol.iterator]();\n}\n\nexport function* groupby<T>(\n  iterable: Iterable<T>,\n  keyFn: (arg0: T) => Primitive = primitiveIdentity\n): Iterable<[Primitive, Iterable<T>]> {\n  const it = iter(iterable);\n\n  let currentValue: T;\n  // @ts-ignore\n  let currentKey: Primitive = SENTINEL;\n  let targetKey = currentKey;\n\n  const grouper = function* grouper(tgtKey: Primitive) {\n    while (currentKey === tgtKey) {\n      yield currentValue;\n\n      const nextVal = it.next();\n      if (nextVal.done) return;\n      currentValue = nextVal.value;\n      currentKey = keyFn(currentValue);\n    }\n  };\n\n  for (;;) {\n    while (currentKey === targetKey) {\n      const nextVal = it.next();\n      if (nextVal.done) {\n        // @ts-ignore\n        currentKey = SENTINEL;\n        return;\n      }\n      currentValue = nextVal.value;\n      currentKey = keyFn(currentValue);\n    }\n\n    targetKey = currentKey;\n    yield [currentKey, grouper(targetKey)];\n  }\n}\n","import { chain, groupby } from \"./itertools\";\n\nexport const NONE = \".\";\nexport const BLACK = \"B\";\nexport const WHITE = \"W\";\nexport const BLACK_PLAYER = \"BLACK\";\nexport const WHITE_PLAYER = \"WHITE\";\n\nconst zip = (...rows: any[]) =>\n  [...rows[0]].map((_, c) => rows.map((row) => row[c]));\n\nfunction genBoard(rows: number, columns: number): Array<Array<string>> {\n  const board: Array<Array<string>> = [];\n\n  for (let i = 0; i < columns; i++) {\n    board.push([]);\n    for (let j = 0; j < rows; j++) {\n      board[i].push(NONE);\n    }\n  }\n\n  return board;\n}\n\nexport class ConnectXImpl {\n  cols: number;\n  rows: number;\n  win: number;\n  gameOver: boolean;\n  board: Array<Array<string>>;\n  turn: string;\n  moveHistory: Array<number>;\n\n  constructor(cols = 7, rows = 6, requiredToWin = 4) {\n    this.cols = cols;\n    this.rows = rows;\n    this.win = requiredToWin;\n    this.gameOver = false;\n    this.board = genBoard(rows, cols);\n    this.turn = BLACK;\n    this.moveHistory = [];\n  }\n\n  resetGame(): void {\n    this.turn = BLACK;\n    this.board = genBoard(this.rows, this.cols);\n    this.gameOver = false;\n    this.moveHistory = [];\n  }\n\n  stop(): void {\n    this.gameOver = true;\n  }\n\n  insert(column: number, shadow = false): boolean {\n    if (this.gameOver) {\n      alert(\"Game is over!\");\n      return false;\n    }\n\n    const color = this.turn;\n\n    if (column < 0 || column >= this.cols) {\n      alert(`Invalid column given: ${column}. Choose between 0 and ${this.cols - 1}`);\n      return false;\n    }\n\n    const c = this.board[column];\n    if (c[0] != NONE) {\n      if (!shadow) {\n        // this.printBoard();\n        alert(`Column ${column} is full`);\n      }\n\n      return false;\n    }\n\n    let i = c.length - 1;\n    while (c[i] != NONE) {\n      i--;\n    }\n\n    if (!shadow) {\n      c[i] = color;\n      this.moveHistory.push(column);\n      const have_won = this.checkForWin();\n      if (have_won != NONE) {\n        this.gameOver = true;\n      }\n      this.turn = this.turn == BLACK ? WHITE : BLACK;\n    }\n\n    return true;\n  }\n\n  getWhoseMove(): string {\n    return this.turn == BLACK ? BLACK_PLAYER : WHITE_PLAYER;\n  }\n\n  checkForWin(): string {\n    const w = this.getWinner();\n    return w;\n  }\n\n  getWinningPlayer(): string {\n    const w = this.checkForWin();\n    if (w != NONE) {\n      return w == BLACK ? BLACK_PLAYER : WHITE_PLAYER;\n    }\n\n    return \"None\";\n  }\n\n  getWinner(): string {\n    const lines = [\n      this.board,\n      zip(...this.board),\n      diagonalsPos(this.board, this.cols, this.rows),\n      diagonalsNeg(this.board, this.cols, this.rows),\n    ];\n\n    for (const line of chain(...lines)) {\n      for (const [color, group] of groupby(line)) {\n        const groupArr = Array.from(group);\n        if (color != NONE && Array.from(groupArr).length >= this.win) {\n          return color as string;\n        }\n      }\n    }\n\n    return NONE;\n  }\n\n  undoLastMove(): void {\n    console.log(this.moveHistory);\n    const moveRemoved = this.moveHistory.pop();\n    if (moveRemoved === undefined) {\n      return;\n    }\n\n    const c = this.board[moveRemoved];\n    let i = c.length - 1;\n    while (c[i] != NONE && i > 0) {\n      i--;\n    }\n\n    let turnFound: string;\n    if (c[i] === NONE) {\n      turnFound = c[i + 1];\n      c[i + 1] = NONE;\n    } else {\n      turnFound = c[i];\n      c[i] = NONE;\n    }\n\n    this.turn = turnFound;\n    this.gameOver = false;\n  }\n\n  getValidMoves(): Array<number> {\n    if (this.gameOver) {\n      return [];\n    }\n\n    const validMoves = [...Array(this.cols).keys()].filter((col) =>\n      this.insert(col, true)\n    );\n    return validMoves;\n  }\n\n  getBoardRepr(): string {\n    let string = [...Array(this.cols).keys()].map(String).join(\"  \") + \"\\n\";\n    for (let y = 0; y < this.rows; y++) {\n      const board_row = [];\n      for (let x = 0; x < this.cols; x++) {\n        board_row.push(String(this.board[x][y]));\n      }\n      string += board_row.join(\"  \") + \"\\n\";\n    }\n\n    return string;\n  }\n\n  printBoard(): void {\n    console.log(this.getBoardRepr());\n  }\n\n  copy(): ConnectXImpl {\n    const newGame = new ConnectXImpl(this.cols, this.rows, this.win);\n    newGame.turn = this.turn;\n    newGame.gameOver = this.gameOver;\n    newGame.board = JSON.parse(JSON.stringify(this.board)); \n    newGame.moveHistory = [...this.moveHistory];\n    return newGame;\n  }\n\n  static getGameFromHistory(\n    history: Array<number>,\n    ...args: Array<any>\n  ): ConnectXImpl {\n    const game = new ConnectXImpl(...args);\n    for (const move of history) {\n      game.insert(move);\n    }\n\n    return game;\n  }\n}\n\nfunction diagonalsPos(\n  matrix: Array<Array<string>>,\n  cols: number,\n  rows: number\n) {\n  const diagonals: Array<Array<Array<number>>> = [];\n  for (let i = 0; i < cols + rows - 1; i++) {\n    diagonals.push([]);\n    for (let j = 0; j < cols; j++) {\n      diagonals[i].push([j, i - j]);\n    }\n  }\n\n  const diagonalVals: Array<Array<string>> = [];\n  for (const diagRow of diagonals) {\n    const newArr: Array<string> = [];\n    diagonalVals.push(newArr);\n    for (const [i, j] of diagRow) {\n      if (i >= 0 && j >= 0 && i < cols && j < rows) {\n        newArr.push(matrix[i][j]);\n      }\n    }\n  }\n\n  return diagonalVals;\n}\n\nfunction diagonalsNeg(\n  matrix: Array<Array<string>>,\n  cols: number,\n  rows: number\n) {\n  const diagonals: Array<Array<Array<number>>> = [];\n  for (let i = 0; i < cols + rows - 1; i++) {\n    diagonals.push([]);\n    for (let j = 0; j < cols; j++) {\n      diagonals[i].push([j, i - cols + j + 1]);\n    }\n  }\n\n  const diagonalVals: Array<Array<string>> = [];\n  for (const diagRow of diagonals) {\n    const newArr: Array<string> = [];\n    diagonalVals.push(newArr);\n    for (const [i, j] of diagRow) {\n      if (i >= 0 && j >= 0 && i < cols && j < rows) {\n        newArr.push(matrix[i][j]);\n      }\n    }\n  }\n\n  return diagonalVals;\n}","import { Player } from \"./ConnectX\";\nimport {\n  BLACK,\n  BLACK_PLAYER,\n  ConnectXImpl,\n  NONE,\n  WHITE,\n  WHITE_PLAYER,\n} from \"./ConnectXImpl\";\n\nexport class MinimaxPlayer implements Player {\n  disableMove = true;\n  automated = true;\n  inDecision = false;\n\n  minimax(\n    game: ConnectXImpl,\n    alpha: number,\n    beta: number,\n    depthLimit = 0\n  ): number {\n    const currentPlayer = game.getWhoseMove();\n    const validMoves = game.getValidMoves();\n\n    if (validMoves.length === 0 || depthLimit === 0) {\n      const utilityScore = this.eval_connect4_2(game);\n      return utilityScore;\n    }\n\n    let bestScore = currentPlayer == BLACK_PLAYER ? -Infinity : Infinity;\n    for (const successiveMove of validMoves) {\n      game.insert(successiveMove);\n      const moveScore = this.minimax(game, alpha, beta, depthLimit - 1);\n      game.undoLastMove();\n\n      if (currentPlayer === BLACK_PLAYER) {\n        bestScore = Math.max(bestScore, moveScore);\n        if (moveScore >= beta) {\n          return moveScore;\n        }\n        alpha = Math.max(alpha, moveScore);\n      } else {\n        bestScore = Math.min(bestScore, moveScore);\n        if (moveScore <= alpha) {\n          return moveScore;\n        }\n        beta = Math.min(beta, moveScore);\n      }\n    }\n\n    return bestScore;\n  }\n\n  // https://www.scirp.org/html/1-9601415_90972.htm#f12\n  // https://github.dev/Qtrain/Java/blob/master/src/unfinishedProjects/connectfour/Board.java\n  evaluationTable = [\n    [3, 4, 5, 7, 5, 4, 3],\n    [4, 6, 8, 10, 8, 6, 4],\n    [5, 8, 11, 13, 11, 8, 5],\n    [5, 8, 11, 13, 11, 8, 5],\n    [4, 6, 8, 10, 8, 6, 4],\n    [3, 4, 5, 7, 5, 4, 3],\n  ];\n  eval_connect4_2(game: ConnectXImpl): number {\n    const utility = 138;\n    if (game.getWinner() !== NONE) {\n      return game.getWhoseMove() == BLACK_PLAYER ? utility * 2 : -(utility * 2);\n    } else if (game.getValidMoves().length === 0) {\n      return utility;\n    }\n\n    const max_rows = game.board[0].length;\n    const max_cols = game.board.length;\n    const board = game.board;\n    let sum = 0;\n    for (let i = 0; i < max_cols; i++) {\n      for (let j = 0; j < max_rows; j++) {\n        if (board[i][j] == BLACK) sum += this.evaluationTable[j][i];\n        else if (board[i][j] != NONE) sum -= this.evaluationTable[j][i];\n      }\n    }\n    return utility + sum;\n  }\n\n  connectXUtility(game: ConnectXImpl, depth: number): number {\n    let score;\n    const winner = game.checkForWin();\n    if (winner === BLACK) {\n      score = 1.0;\n    } else if (winner === WHITE) {\n      score = -1.0;\n    } else {\n      score = 0;\n    }\n\n    return score * (1 / (1 + depth));\n  }\n\n  DEPTH_LIMIT = 4;\n\n  onMoveReady(_: number, game: ConnectXImpl): number {\n    const currentPlayer = game.getWhoseMove();\n    const validMoves = game.getValidMoves();\n\n    if (validMoves.length === 0) {\n      alert(\"No move to be made...\");\n      return -1;\n    }\n\n    let bestMoves: Array<number> = [];\n    let bestScore = currentPlayer == BLACK_PLAYER ? -Infinity : Infinity;\n\n    for (const move of validMoves) {\n      game.insert(move);\n      let minimaxScore = this.minimax(\n        game,\n        -Infinity,\n        Infinity,\n        this.DEPTH_LIMIT\n      );\n      game.undoLastMove();\n\n      minimaxScore = Math.round(minimaxScore * 100000);\n\n      if (bestMoves.length === 0) {\n        bestMoves.push(move);\n        bestScore = minimaxScore;\n      } else if (currentPlayer === BLACK_PLAYER && bestScore < minimaxScore) {\n        bestScore = minimaxScore;\n        bestMoves = [move];\n      } else if (currentPlayer === WHITE_PLAYER && bestScore > minimaxScore) {\n        bestScore = minimaxScore;\n        bestMoves = [move];\n      } else if (bestScore === minimaxScore) {\n        bestMoves.push(move);\n      }\n    }\n\n    return bestMoves[Math.floor(Math.random() * bestMoves.length)];\n    // return bestMove[0];\n  }\n}\n","import { useState } from \"react\";\nimport \"./ConnectX.css\";\nimport { Button } from \"react-bootstrap\";\nimport { ConnectXImpl, NONE, WHITE_PLAYER } from \"./ConnectXImpl\";\nimport { MinimaxPlayer } from \"./MinimaxPlayer\";\nimport { Link } from \"react-router-dom\";\n\nexport interface Player {\n  disableMove: boolean;\n  automated: boolean;\n  onMoveReady: (move: number, game: ConnectXImpl) => number;\n  inDecision: boolean;\n}\n\nclass ManualPlayer implements Player {\n  disableMove = false;\n  onMoveReady: (move: number, game: ConnectXImpl) => number;\n  automated = false;\n  inDecision = false;\n\n  constructor(onMoveReady: (move: number, game: ConnectXImpl) => number) {\n    this.onMoveReady = onMoveReady;\n  }\n}\n\nexport interface GameOptionsProps {\n  game: ConnectXImpl;\n  setGame: (g: ConnectXImpl) => void;\n  updatePage: () => void;\n  setPlayer: (isManual: boolean, whichPlayer: number) => void;\n  players: Player[];\n}\nfunction GameOptions(props: GameOptionsProps) {\n  const { game, setGame, updatePage, setPlayer, players } = props;\n\n  const playerStr = (player: Player) => {\n    return player.automated ? \"Auto\" : \"Manual\";\n  };\n\n  return (\n    <>\n      <section id=\"game-options\">\n        <h3>Game Options</h3>\n        <Button onClick={() => { game.resetGame(); updatePage(); }}>\n          New Game\n        </Button>\n        <Button onClick={() => setPlayer(players[0].automated, 0)}>\n          Player 1: {playerStr(players[0])}\n        </Button>\n        <Button onClick={() => setPlayer(players[1].automated, 1)}>\n          Player 2: {playerStr(players[1])}\n        </Button>\n        <Button onClick={() => { game.undoLastMove(); updatePage(); }}>\n          Undo last move\n        </Button>\n        <section style={{marginTop:\"2vh\",fontSize:\"1.5em\"}}>\n          BLACK = B<br/>\n          WHITE = W<br/>\n          NONE  = .\n        </section>\n      </section>\n    </>\n  );\n}\n\nexport interface GameSettingsProps {\n  game: ConnectXImpl;\n  setGame: (g: ConnectXImpl) => void;\n  updatePage: () => void;\n}\nfunction GameSettings(props: GameSettingsProps) {\n  const { game, setGame, updatePage } = props;\n\n  const generateSetConditionWrapper = (doGameSet: () => ConnectXImpl) => {\n    let allowReset = true;\n    if (game.moveHistory.length > 0) {\n      allowReset = confirm(\"Doing this will reset the game. Do you want to continue?\");\n    }\n    if (allowReset) {\n      setGame(doGameSet());\n    }\n  };\n\n  const setCondition = (name: string, maxAllowed: number, minAllowed: number, setter: (n: number) => ConnectXImpl) => {\n    const colStr = (document.getElementById(name) as HTMLInputElement).value;\n    const col = +colStr;\n    if (col < minAllowed || col > maxAllowed) {\n      alert(\"Columns must be between 1 and 7\");\n      return -1;\n    }\n\n    generateSetConditionWrapper(() => setter(col));\n  };\n\n  return (\n    <section id=\"game-settings\">\n      <h3>Game Conditions</h3>\n      <div>\n        {`(${game.cols})`} &nbsp;\n        <input placeholder=\"Enter columns\" id=\"cols\" type=\"number\" />\n        <Button type=\"button\" onClick={() => setCondition(\"cols\", 7, 1, (n) => new ConnectXImpl(n, game.rows, game.win))}>\n          Set\n        </Button>\n      </div>\n      <div>\n        {`(${game.rows})`} &nbsp;\n        <input placeholder=\"Enter rows\" id=\"rows\" type=\"number\" />\n        <Button type=\"button\" onClick={() => setCondition(\"rows\", 6, 1, (n) => new ConnectXImpl(game.cols, n, game.win))}>\n          Set\n        </Button>\n      </div>\n      <div>\n        {`(${game.win})`} &nbsp;\n        <input placeholder=\"Enter win condition\" id=\"wins\" type=\"number\" />\n        <Button type=\"button\" onClick={() => setCondition(\"wins\", 7, 1, (n) => new ConnectXImpl(game.cols, game.rows, n))}>\n          Set\n        </Button>\n      </div>\n    </section>\n  );\n}\n\nexport interface ConnectXProps {\n  rows?: number;\n  cols?: number;\n  requiredToWin?: number;\n  defaultAutoDelay?: number;\n}\n\nfunction getManualPlayerMove(): number {\n  const col = (document.getElementById(\"move\") as HTMLInputElement).value;\n  if (!col) {\n    alert(`Invalid column given: ${col}`);\n    return -1;\n  }\n\n  return +col;\n}\n\nfunction setupManualPlayer(): ManualPlayer {\n  const onMoveReady = (move: number, _: ConnectXImpl) => {\n    return move;\n  };\n\n  const manualPlayer = new ManualPlayer(onMoveReady);\n  return manualPlayer;\n}\n\nexport function ConnectX(props: ConnectXProps) {\n  const { rows, cols, requiredToWin } = props;\n  const defaultAutoDelay = props.defaultAutoDelay || 2;\n  console.log(defaultAutoDelay);\n\n  const [connectXGame, setConnectXGame] = useState(\n    new ConnectXImpl(cols, rows, requiredToWin)\n  );\n  const [players, setPlayers] = useState([setupManualPlayer(), setupManualPlayer()]);\n  const [update, setUpdate] = useState(false);\n  const [inDecision, setInDecision] = useState(false);\n  const [d, sd] = useState(0);\n\n  const onMoveMade = (col: number) => {\n    connectXGame.insert(col);\n    setUpdate(!update);\n  };\n\n  const setPlayerToSomething = (isManual: boolean, whichPlayer: number): void => {\n    const newPlayerArr = [...players];\n    const newPlayer = isManual ? setupManualPlayer() : new MinimaxPlayer();\n    newPlayerArr[whichPlayer] = newPlayer;\n    setPlayers(newPlayerArr);\n  };\n\n  const onMoveHistory = () => {\n    const moveHistory = (document.getElementById(\"move-history\") as HTMLInputElement).value.trim();\n    if (moveHistory.length === 0) {\n      setConnectXGame(ConnectXImpl.getGameFromHistory([]));\n      return;\n    }\n    const moveHistoryL = moveHistory.split(\" \").map(v => +v);\n    const newConnectXGame = ConnectXImpl.getGameFromHistory(moveHistoryL);\n    setConnectXGame(newConnectXGame);\n  };\n\n  // console.log(connectXGame.getBoardRepr());\n\n  const whichPlayer: number = +(connectXGame.getWhoseMove() === WHITE_PLAYER);\n  const currPlayer = players[whichPlayer];\n  const doMoveDisabled = currPlayer.disableMove;\n\n  const onManualMove = () => {\n    if (!doMoveDisabled) {\n      const moveMade = getManualPlayerMove();\n      const actualMove = players[whichPlayer].onMoveReady(moveMade, connectXGame);\n      onMoveMade(actualMove);\n    } else {\n      alert(\"Waiting for automated move!\");\n    }\n  };\n\n  if (currPlayer.automated && connectXGame.checkForWin() === NONE && connectXGame.getValidMoves().length > 0 && !inDecision) {\n    sd(d + 1);\n    const nextMove = players[whichPlayer].onMoveReady(-1, connectXGame.copy());\n    onMoveMade(nextMove);\n  }\n\n  return (\n    <div className=\"page\">\n      <h2>Connect X Demo</h2>\n      <aside>\n        Please navigate to <Link to=\"/minimax_algorithm\">our minimax tutorial</Link> for more information on minimax\n      </aside>\n      <main>\n        <div id=\"board\" dangerouslySetInnerHTML={{ __html: connectXGame.getBoardRepr().replaceAll(\"\\n\", \"<br>\").replaceAll(\" \", \"&nbsp;\")}} />\n        <section id=\"game-metadata\">\n          <p>Current move: {connectXGame.getWhoseMove()}</p>\n          {connectXGame.gameOver ? (<p>Winner: {connectXGame.getWinningPlayer()}</p>) : null}\n        </section>\n        {connectXGame.gameOver ? null : (<section style={{marginTop:0}}>\n          <input placeholder={`Enter column from 0-${connectXGame.cols - 1}`} id=\"move\" type=\"number\" />\n          <Button type=\"button\" onClick={onManualMove} disabled={doMoveDisabled}>\n            Do move\n          </Button>\n        </section>)}\n        <GameOptions\n          game={connectXGame}\n          setGame={setConnectXGame}\n          updatePage={() => setUpdate(!update)}\n          setPlayer={setPlayerToSomething}\n          players={players}\n        />\n        <GameSettings\n          game={connectXGame}\n          setGame={setConnectXGame}\n          updatePage={() => setUpdate(!update)}\n        />\n        <section>\n          <h3>Advanced Options</h3>\n          <input placeholder=\"Enter numbers as CSV\" id=\"move-history\" />\n          <Button type=\"button\" onClick={onMoveHistory}>\n            Set Move History\n          </Button>\n        </section>\n      </main>\n    </div>\n  );\n}\n","import { Switch, Route, HashRouter } from \"react-router-dom\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport { Container } from \"@material-ui/core/\";\nimport Markdown from \"./components/Markdown\";\nimport { tutorials } from \"./data\";\n\nimport Home from \"./pages/Home\";\nimport Purpose from \"./pages/Purpose\";\n\nimport Navbar from \"./components/Navbar\";\nimport Footer from \"./components/Footer\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { ConnectX } from \"./connectx/ConnectX\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: \"#62727b\",\n      main: \"#37474f\",\n      dark: \"#102027\",\n      contrastText: \"#fff\",\n    },\n    secondary: {\n      light: \"#60ad5e\",\n      main: \"#2e7d32\",\n      dark: \"#005005\",\n      contrastText: \"#000\",\n    },\n    background: {\n      paper: \"#f3f0e8\"\n    }\n  },\n});\n\nfunction App() {\n  return (\n    <HashRouter>\n      <ThemeProvider theme={theme}>\n        <Navbar />\n        <Container>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            {tutorials.map((tutorial, idx) =>\n              <Route key={\"route\" + idx} path={`/${tutorial.notebook}`}>\n                <Markdown\n                  {...tutorial.content}\n                  fileName={tutorial.notebook}\n                />\n              </Route>\n            )}\n            <Route path=\"/purpose\" component={Purpose} />\n            <Route path=\"/connectx-demo\" component={ConnectX} />\n          </Switch>\n        </Container>\n        <Footer />\n      </ThemeProvider>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}